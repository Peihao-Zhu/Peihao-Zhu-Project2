{"ast":null,"code":"var _jsxFileName = \"/Users/zhupeihao/Desktop/NEU/cs5610/project 2/wordle/src/grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid(props) {\n  _s();\n  // State to hold the grid data\n  const [gridData, setGridData] = useState(createGridData(props.rows, props.cols));\n  // Array to store refs to each input element\n  const inputRefs = useRef(Array(props.rows).fill().map(() => Array(props.cols).fill(null)));\n\n  // Function to handle changes in the grid data\n  function handleGridChange(event, row, col) {\n    const newData = [...gridData];\n    newData[row][col] = event.target.value;\n    setGridData(newData);\n\n    // Move focus to next input element\n    if (col < props.cols - 1) {\n      inputRefs.current[row][col + 1].focus();\n    } else if (row < props.rows - 1) {\n      inputRefs.current[row + 1][0].focus();\n    }\n  }\n  // Function to handle Enter key press\n  function handleEnterKeyPress(event, row, col) {\n    // Move focus to next row\n    if (row < props.rows - 1) {\n      inputRefs.current[row + 1][0].focus();\n    }\n  }\n\n  // Render the grid\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: gridData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: 1,\n        value: cell,\n        onChange: event => handleGridChange(event, rowIndex, colIndex),\n        style: {\n          border: '1px solid black',\n          width: '30px',\n          height: '30px',\n          textAlign: 'center'\n        },\n        onKeyDown: event => {\n          if (event.key === 'ArrowLeft' && colIndex > 0) {\n            inputRefs.current[rowIndex][colIndex - 1].focus();\n          } else if (event.key === 'Enter') {\n            handleEnterKeyPress(event, rowIndex, colIndex);\n          }\n        },\n        ref: input => {\n          inputRefs.current[rowIndex][colIndex] = input;\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"ZXEUkuiIeTuhSTH0HPhHseUd1m0=\");\n_c = Grid;\nfunction createGridData(rows, cols) {\n  // Initialize grid data to empty strings\n  const data = Array(rows).fill().map(() => Array(cols).fill(''));\n  return data;\n}\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Grid","props","_s","gridData","setGridData","createGridData","rows","cols","inputRefs","Array","fill","map","handleGridChange","event","row","col","newData","target","value","current","focus","handleEnterKeyPress","className","children","rowIndex","cell","colIndex","type","maxLength","onChange","style","border","width","height","textAlign","onKeyDown","key","ref","input","fileName","_jsxFileName","lineNumber","columnNumber","_c","data","$RefreshReg$"],"sources":["/Users/zhupeihao/Desktop/NEU/cs5610/project 2/wordle/src/grid.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\n\nfunction Grid(props) {\n  // State to hold the grid data\n  const [gridData, setGridData] = useState(\n    createGridData(props.rows, props.cols),\n  )\n  // Array to store refs to each input element\n  const inputRefs = useRef(\n    Array(props.rows)\n      .fill()\n      .map(() => Array(props.cols).fill(null)),\n  )\n\n  // Function to handle changes in the grid data\n  function handleGridChange(event, row, col) {\n    const newData = [...gridData]\n    newData[row][col] = event.target.value\n    setGridData(newData)\n\n    // Move focus to next input element\n    if (col < props.cols - 1) {\n      inputRefs.current[row][col + 1].focus()\n    } else if (row < props.rows - 1) {\n      inputRefs.current[row + 1][0].focus()\n    }\n  }\n  // Function to handle Enter key press\n  function handleEnterKeyPress(event, row, col) {\n    // Move focus to next row\n    if (row < props.rows - 1) {\n      inputRefs.current[row + 1][0].focus()\n    }\n  }\n\n  // Render the grid\n  return (\n    <div className=\"grid\">\n      {gridData.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"row\">\n          {row.map((cell, colIndex) => (\n            <input\n              key={colIndex}\n              type=\"text\"\n              maxLength={1}\n              value={cell}\n              onChange={(event) => handleGridChange(event, rowIndex, colIndex)}\n              style={{\n                border: '1px solid black',\n                width: '30px',\n                height: '30px',\n                textAlign: 'center',\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'ArrowLeft' && colIndex > 0) {\n                  inputRefs.current[rowIndex][colIndex - 1].focus()\n                } else if (event.key === 'Enter') {\n                  handleEnterKeyPress(event, rowIndex, colIndex)\n                }\n              }}\n              ref={(input) => {\n                inputRefs.current[rowIndex][colIndex] = input\n              }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction createGridData(rows, cols) {\n  // Initialize grid data to empty strings\n  const data = Array(rows)\n    .fill()\n    .map(() => Array(cols).fill(''))\n  return data\n}\n\nexport default Grid\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}