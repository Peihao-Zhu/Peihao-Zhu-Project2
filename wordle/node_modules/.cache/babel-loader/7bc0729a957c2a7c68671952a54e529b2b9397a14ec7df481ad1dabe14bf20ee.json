{"ast":null,"code":"var _jsxFileName = \"/Users/zhupeihao/Desktop/github-desktop/Peihao-Zhu-Project2/wordle/src/gameDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Grid from './grid';\nimport WordleContext from './WordleContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst normalWords = ['NUMBER', 'PEOPLE', 'BEFORE', 'LETTER', 'LITTLE', 'YELLOW', 'WINDOW', 'BOTTLE', 'BUTTON', 'BATTLE'];\nconst hardWords = ['abalone', 'bandana', 'chicken', 'dolphin', 'eclipse', 'furnace', 'gazelle', 'haddock', 'inquiry', 'javelin'];\nfunction GameDetail(props) {\n  _s();\n  const [gridData, setGridData] = useState(createGridData(props.row, props.col));\n  const [row, setRow] = useState(0);\n  const [col, setCol] = useState(0);\n  const [answer, setAnswer] = useState(GenerateAnswer(props.mode));\n\n  // const updateGridData = (newData) => {\n  //   setGridData(newData)\n  // }\n\n  function createGridData(rows, cols) {\n    // Initialize grid data to empty strings\n    const data = Array(rows).fill().map(() => Array(cols).fill(''));\n    return data;\n  }\n  function GenerateAnswer(mode) {\n    // Got these words from ChatGPT\n    return mode === 'normal' ? normalWords[Math.floor(Math.random() * normalWords.length)] : hardWords[Math.floor(Math.random() * hardWords.length)];\n  }\n  function handleAnswer(mode) {\n    setAnswer(GenerateAnswer(mode));\n  }\n  return /*#__PURE__*/_jsxDEV(WordleContext.Provider, {\n    value: {\n      gridDataObject: [gridData, setGridData],\n      rows: props.row,\n      cols: props.col,\n      rowObject: [row, setRow],\n      colObject: [col, setCol],\n      answerObject: [answer, handleAnswer],\n      mode: props.mode\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(GameDetail, \"2qikqm46OzBrGD31yxLo04IrC6M=\");\n_c = GameDetail;\nexport default GameDetail;\nvar _c;\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"names":["React","useState","Grid","WordleContext","jsxDEV","_jsxDEV","normalWords","hardWords","GameDetail","props","_s","gridData","setGridData","createGridData","row","col","setRow","setCol","answer","setAnswer","GenerateAnswer","mode","rows","cols","data","Array","fill","map","Math","floor","random","length","handleAnswer","Provider","value","gridDataObject","rowObject","colObject","answerObject","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhupeihao/Desktop/github-desktop/Peihao-Zhu-Project2/wordle/src/gameDetail.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Grid from './grid'\nimport WordleContext from './WordleContext'\n\nconst normalWords = [\n  'NUMBER',\n  'PEOPLE',\n  'BEFORE',\n  'LETTER',\n  'LITTLE',\n  'YELLOW',\n  'WINDOW',\n  'BOTTLE',\n  'BUTTON',\n  'BATTLE',\n]\nconst hardWords = [\n  'abalone',\n  'bandana',\n  'chicken',\n  'dolphin',\n  'eclipse',\n  'furnace',\n  'gazelle',\n  'haddock',\n  'inquiry',\n  'javelin',\n]\n\nfunction GameDetail(props) {\n  const [gridData, setGridData] = useState(createGridData(props.row, props.col))\n  const [row, setRow] = useState(0)\n  const [col, setCol] = useState(0)\n  const [answer, setAnswer] = useState(GenerateAnswer(props.mode))\n\n  // const updateGridData = (newData) => {\n  //   setGridData(newData)\n  // }\n\n  function createGridData(rows, cols) {\n    // Initialize grid data to empty strings\n    const data = Array(rows)\n      .fill()\n      .map(() => Array(cols).fill(''))\n    return data\n  }\n\n  function GenerateAnswer(mode) {\n    // Got these words from ChatGPT\n    return mode === 'normal'\n      ? normalWords[Math.floor(Math.random() * normalWords.length)]\n      : hardWords[Math.floor(Math.random() * hardWords.length)]\n  }\n\n  function handleAnswer(mode) {\n    setAnswer(GenerateAnswer(mode))\n  }\n\n  return (\n    <WordleContext.Provider\n      value={{\n        gridDataObject: [gridData, setGridData],\n        rows: props.row,\n        cols: props.col,\n        rowObject: [row, setRow],\n        colObject: [col, setCol],\n        answerObject: [answer, handleAnswer],\n        mode: props.mode,\n      }}\n    >\n      <Grid />\n    </WordleContext.Provider>\n  )\n}\n\nexport default GameDetail\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAG,CAClB,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;AACD,MAAMC,SAAS,GAAG,CAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;AAED,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACY,cAAc,CAACJ,KAAK,CAACK,GAAG,EAAEL,KAAK,CAACM,GAAG,CAAC,CAAC;EAC9E,MAAM,CAACD,GAAG,EAAEE,MAAM,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACc,GAAG,EAAEE,MAAM,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAACmB,cAAc,CAACX,KAAK,CAACY,IAAI,CAAC,CAAC;;EAEhE;EACA;EACA;;EAEA,SAASR,cAAcA,CAACS,IAAI,EAAEC,IAAI,EAAE;IAClC;IACA,MAAMC,IAAI,GAAGC,KAAK,CAACH,IAAI,CAAC,CACrBI,IAAI,EAAE,CACNC,GAAG,CAAC,MAAMF,KAAK,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,OAAOF,IAAI;EACb;EAEA,SAASJ,cAAcA,CAACC,IAAI,EAAE;IAC5B;IACA,OAAOA,IAAI,KAAK,QAAQ,GACpBf,WAAW,CAACsB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGxB,WAAW,CAACyB,MAAM,CAAC,CAAC,GAC3DxB,SAAS,CAACqB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGvB,SAAS,CAACwB,MAAM,CAAC,CAAC;EAC7D;EAEA,SAASC,YAAYA,CAACX,IAAI,EAAE;IAC1BF,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC,CAAC;EACjC;EAEA,oBACEhB,OAAA,CAACF,aAAa,CAAC8B,QAAQ;IACrBC,KAAK,EAAE;MACLC,cAAc,EAAE,CAACxB,QAAQ,EAAEC,WAAW,CAAC;MACvCU,IAAI,EAAEb,KAAK,CAACK,GAAG;MACfS,IAAI,EAAEd,KAAK,CAACM,GAAG;MACfqB,SAAS,EAAE,CAACtB,GAAG,EAAEE,MAAM,CAAC;MACxBqB,SAAS,EAAE,CAACtB,GAAG,EAAEE,MAAM,CAAC;MACxBqB,YAAY,EAAE,CAACpB,MAAM,EAAEc,YAAY,CAAC;MACpCX,IAAI,EAAEZ,KAAK,CAACY;IACd,CAAE;IAAAkB,QAAA,eAEFlC,OAAA,CAACH,IAAI;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACe;AAE7B;AAACjC,EAAA,CA5CQF,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA8CnB,eAAeA,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}