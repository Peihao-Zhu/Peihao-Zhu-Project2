{"ast":null,"code":"var _jsxFileName = \"/Users/zhupeihao/Desktop/NEU/cs5610/project 2/wordle/src/gameDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Grid from './grid';\nimport GridContext from './gridContext';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameDetail(props) {\n  _s();\n  const [gridData, setGridData] = useState([]);\n  const [row, setRow] = useState(0);\n  const [col, setCol] = useState(0);\n  const updateGridData = newData => {\n    setGridData(newData);\n  };\n  // Got these words from ChatGPT\n  const normalWords = ['NUMBER', 'PEOPLE', 'BEFORE', 'LETTER', 'LITTLE', 'YELLOW', 'WINDOW', 'BOTTLE', 'BUTTON', 'BATTLE'];\n  const hardWords = ['abalone', 'bandana', 'chicken', 'dolphin', 'eclipse', 'furnace', 'gazelle', 'haddock', 'inquiry', 'javelin'];\n  useEffect(() => {\n    // Your code here\n    const answerWord = props.mode === 'normal' ? normalWords[Math.floor(Math.random() * normalWords.length)] : hardWords[Math.floor(Math.random() * hardWords.length)];\n  }, []);\n\n  // const answerWord = useLocation().state.answerWord\n\n  return /*#__PURE__*/_jsxDEV(GridContext.Provider, {\n    value: {\n      gridData,\n      updateGridData\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      rows: props.row,\n      cols: props.col,\n      row: row,\n      setRow: setRow,\n      col: col,\n      setCol: setCol,\n      attempt: props.row,\n      answerWord: answerWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(GameDetail, \"dYzyJUEbwgjZOJj/uz47Zpg6dqU=\");\n_c = GameDetail;\nexport default GameDetail;\nvar _c;\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"names":["React","useState","Grid","GridContext","useLocation","jsxDEV","_jsxDEV","GameDetail","props","_s","gridData","setGridData","row","setRow","col","setCol","updateGridData","newData","normalWords","hardWords","useEffect","answerWord","mode","Math","floor","random","length","Provider","value","children","rows","cols","attempt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhupeihao/Desktop/NEU/cs5610/project 2/wordle/src/gameDetail.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Grid from './grid'\nimport GridContext from './gridContext'\nimport { useLocation } from 'react-router-dom'\n\nfunction GameDetail(props) {\n  const [gridData, setGridData] = useState([])\n  const [row, setRow] = useState(0)\n  const [col, setCol] = useState(0)\n\n  const updateGridData = (newData) => {\n    setGridData(newData)\n  }\n  // Got these words from ChatGPT\n  const normalWords = [\n    'NUMBER',\n    'PEOPLE',\n    'BEFORE',\n    'LETTER',\n    'LITTLE',\n    'YELLOW',\n    'WINDOW',\n    'BOTTLE',\n    'BUTTON',\n    'BATTLE',\n  ]\n  const hardWords = [\n    'abalone',\n    'bandana',\n    'chicken',\n    'dolphin',\n    'eclipse',\n    'furnace',\n    'gazelle',\n    'haddock',\n    'inquiry',\n    'javelin',\n  ]\n  useEffect(() => {\n    // Your code here\n    const answerWord =\n      props.mode === 'normal'\n        ? normalWords[Math.floor(Math.random() * normalWords.length)]\n        : hardWords[Math.floor(Math.random() * hardWords.length)]\n  }, [])\n\n  // const answerWord = useLocation().state.answerWord\n\n  return (\n    <GridContext.Provider value={{ gridData, updateGridData }}>\n      <Grid\n        rows={props.row}\n        cols={props.col}\n        row={row}\n        setRow={setRow}\n        col={col}\n        setCol={setCol}\n        attempt={props.row}\n        answerWord={answerWord}\n      />\n    </GridContext.Provider>\n  )\n}\n\nexport default GameDetail\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMe,cAAc,GAAIC,OAAO,IAAK;IAClCN,WAAW,CAACM,OAAO,CAAC;EACtB,CAAC;EACD;EACA,MAAMC,WAAW,GAAG,CAClB,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;EACD,MAAMC,SAAS,GAAG,CAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EACDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,UAAU,GACdb,KAAK,CAACc,IAAI,KAAK,QAAQ,GACnBJ,WAAW,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,WAAW,CAACQ,MAAM,CAAC,CAAC,GAC3DP,SAAS,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,SAAS,CAACO,MAAM,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEpB,OAAA,CAACH,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAElB,QAAQ;MAAEM;IAAe,CAAE;IAAAa,QAAA,eACxDvB,OAAA,CAACJ,IAAI;MACH4B,IAAI,EAAEtB,KAAK,CAACI,GAAI;MAChBmB,IAAI,EAAEvB,KAAK,CAACM,GAAI;MAChBF,GAAG,EAAEA,GAAI;MACTC,MAAM,EAAEA,MAAO;MACfC,GAAG,EAAEA,GAAI;MACTC,MAAM,EAAEA,MAAO;MACfiB,OAAO,EAAExB,KAAK,CAACI,GAAI;MACnBS,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACmB;AAE3B;AAAC3B,EAAA,CAzDQF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA2DnB,eAAeA,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}